name: npm-publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

# Add permissions configuration
permissions:
  contents: write
  packages: write
  issues: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Extract release notes from CHANGELOG
        id: extract_release_notes
        run: |
          VERSION=${{ env.VERSION }}
          # Extract content for the current version from CHANGELOG
          # Use awk to extract the version section and save it
          # Capture all content from the version heading until the next version heading
          RELEASE_NOTES=$(awk -v version="## \\[$VERSION\\]" '
            BEGIN { found=0; }
            found==1 && /^## \[/ { found=0; }
            found==1 { print $0; }
            $0 ~ version { found=1; }
          ' CHANGELOG.md)
          
          # If no content is found, use a default message
          if [ -z "$RELEASE_NOTES" ]; then
            RELEASE_NOTES="Release version $VERSION. See CHANGELOG.md for details."
          fi
          
          # Save the extracted content to environment variable, handling multiline text
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Publish to NPM
        run: npm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ env.VERSION }}
          body: |
            # Release v${{ env.VERSION }}
            
            ${{ env.RELEASE_NOTES }}
            
            For complete details, please refer to the [CHANGELOG.md](https://github.com/xiaolaa2/ableton-copilot-mcp/blob/main/CHANGELOG.md).
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 